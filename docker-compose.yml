services:
  # Backend API
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: sucount-backend
    ports:
      - "8000:8000"
    env_file:
      - ./back/.env
    environment:
      - DATABASE_URL=sqlite:////data/water_management.db
    volumes:
      - ./data:/data
    networks:
      - sucount-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # ML Oracle Simulator
  oracle:
    build:
      context: ./back
      dockerfile: Dockerfile
    container_name: sucount-oracle
    command: python scripts/oracle_simulator.py
    environment:
      - API_URL=http://backend:8000/api/water-usage
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - sucount-network
    restart: unless-stopped

  # Frontend (Nginx)
  frontend:
    image: nginx:alpine
    container_name: sucount-frontend
    ports:
      - "3000:80"
    volumes:
      - ./front:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - sucount-network
    restart: unless-stopped
    depends_on:
      - backend

networks:
  sucount-network:
    driver: bridge

volumes:
  data:
    driver: local
